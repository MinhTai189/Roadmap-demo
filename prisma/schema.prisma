// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator nestjs_dto_generator {
  provider             = "prisma-nestjs-dto-generator"
  output               = "../src/generated"
  enableModel          = false // default: true
  modelFileNameSuffix  = ".model" // default: ".model"
  modelClassNameSuffix = "Model" // default: ""
  enableSwagger        = false // default: false
  dtoClassNameSuffix   = "Dto" // default: "Dto"
  dtoFileNameSuffix    = ".dto" // default: ".dto"
  toLowerCase          = false // field name to lower case, default: false
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  firstName String?  @db.VarChar(50)
  lastName  String?  @db.VarChar(50)
  topic     Topic[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Box       Box[]
}

model Vocabulary {
  id            Int              @id @default(autoincrement())
  name          String           @db.VarChar(100)
  ipa           String           @db.VarChar(200)
  types         VocabularyType[]
  examples      Json?
  imageUrl      String?
  audioUrl      String?
  rememberCount Int              @default(0)
  meaning       String           @db.VarChar(200)
  topicId       Int?
  topic         Topic?           @relation(fields: [topicId], references: [id], onDelete: Cascade)
  boxId         Int?
  box           Box?             @relation(fields: [boxId], references: [id])
  // relationVocabularies 
  // irregular Vocabulary
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  reviewedAt    DateTime?
}

model Topic {
  id           Int          @id @default(autoincrement())
  name         String       @db.VarChar(100)
  background   String
  vocabularies Vocabulary[]
  userId       Int?
  user         User?        @relation(fields: [userId], references: [id])
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@unique([name, userId])
}

model Box {
  id           Int          @id @default(autoincrement())
  name         String
  description  String
  level        Int
  userId       Int
  user         User?        @relation(fields: [userId], references: [id])
  vocabularies Vocabulary[]
  timeline     Int
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt

  @@unique([level, userId])
}

enum VocabularyType {
  verb
  noun
  adjective
  adverb
  preposition
  compound_word
}
